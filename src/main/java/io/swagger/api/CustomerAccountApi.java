/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.1-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.CustomerAccount;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-12-08T11:08:14.094+03:00")

@Api(value = "customerAccount", description = "the customerAccount API")
public interface CustomerAccountApi {

    @ApiOperation(value = "customerAccountCreate", nickname = "customerAccountCreate", notes = "", response = CustomerAccount.class, tags={ "customerAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "CustomerAccount", response = CustomerAccount.class) })
    @RequestMapping(value = "/customerAccount",
        produces = { "application/json" }, 
        /*consumes = { "application/json" },*/
        method = RequestMethod.POST)
    ResponseEntity<CustomerAccount> customerAccountCreate(@ApiParam(value = "" ,required=true )  @Valid @RequestBody CustomerAccount customerAccount);


    @ApiOperation(value = "customerAccountDelete", nickname = "customerAccountDelete", notes = "", tags={ "customerAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success") })
    @RequestMapping(value = "/customerAccount/{customerAccountId}",
        produces = { "application/json" }, 
        /*consumes = { "application/json" },*/
        method = RequestMethod.DELETE)
    ResponseEntity<Void> customerAccountDelete(@ApiParam(value = "",required=true) @PathVariable("customerAccountId") String customerAccountId);


    @ApiOperation(value = "customerAccountFind", nickname = "customerAccountFind", notes = "", response = CustomerAccount.class, responseContainer = "List", tags={ "customerAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of CustomerAccount", response = CustomerAccount.class, responseContainer = "List") })
    @RequestMapping(value = "/customerAccount",
        produces = { "application/json" }, 
        /*consumes = { "application/json" },*/
        method = RequestMethod.GET)
    ResponseEntity<List<CustomerAccount>> customerAccountFind(@ApiParam(value = "") @Valid @RequestParam(value = "fields", required = false) String fields);


    @ApiOperation(value = "customerAccountGet", nickname = "customerAccountGet", notes = "", response = CustomerAccount.class, tags={ "customerAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "CustomerAccount", response = CustomerAccount.class) })
    @RequestMapping(value = "/customerAccount/{customerAccountId}",
        produces = { "application/json" }, 
        /*consumes = { "application/json" },*/
        method = RequestMethod.GET)
    ResponseEntity<CustomerAccount> customerAccountGet(@ApiParam(value = "",required=true) @PathVariable("customerAccountId") String customerAccountId,@ApiParam(value = "") @Valid @RequestParam(value = "fields", required = false) String fields);


    @ApiOperation(value = "customerAccountPatch", nickname = "customerAccountPatch", notes = "", response = CustomerAccount.class, tags={ "customerAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success CustomerAccount", response = CustomerAccount.class) })
    @RequestMapping(value = "/customerAccount/{customerAccountId}",
        produces = { "application/json" }, 
        /*consumes = { "application/json" },*/
        method = RequestMethod.PATCH)
    ResponseEntity<CustomerAccount> customerAccountPatch(@ApiParam(value = "",required=true) @PathVariable("customerAccountId") String customerAccountId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody CustomerAccount customerAccount);


    @ApiOperation(value = "customerAccountUpdate", nickname = "customerAccountUpdate", notes = "", response = CustomerAccount.class, tags={ "customerAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success CustomerAccount", response = CustomerAccount.class) })
    @RequestMapping(value = "/customerAccount/{customerAccountId}",
        produces = { "application/json" }, 
        /*consumes = { "application/json" },*/
        method = RequestMethod.PUT)
    ResponseEntity<CustomerAccount> customerAccountUpdate(@ApiParam(value = "",required=true) @PathVariable("customerAccountId") String customerAccountId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody CustomerAccount customerAccount);

}
